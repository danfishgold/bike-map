import fetch from 'node-fetch'

const queryPart = (area: string) => `
  node["cycleway"="lane"](${area});
  way["cycleway"="lane"](${area});
  relation["cycleway"="lane"](${area});
  node["cycleway"="track"](${area});
  way["cycleway"="track"](${area});
  relation["cycleway"="track"](${area});
  node["highway"="cycleway"](${area});
  way["highway"="cycleway"](${area});
  relation["highway"="cycleway"](${area});
  node["highway"="footway"]["highway"="path"]["bicycle"="yes"](${area});
  way["highway"="footway"]["highway"="path"]["bicycle"="yes"](${area});
  relation["highway"="footway"]["highway"="path"]["bicycle"="yes"](${area});
  node["highway"="footway"]["highway"="path"]["bicycle"="designated"](${area});
  way["highway"="footway"]["highway"="path"]["bicycle"="designated"](${area});
  relation["highway"="footway"]["highway"="path"]["bicycle"="designated"](${area});
  node["highway"="footway"]["highway"="path"]["bicycle"="official"](${area});
  way["highway"="footway"]["highway"="path"]["bicycle"="official"](${area});
  relation["highway"="footway"]["highway"="path"]["bicycle"="official"](${area});
`

// Based on this: https://help.openstreetmap.org/questions/64879/get-all-bicycle-infrastructure-for-a-city/64898
const overpassTurboQuery = `
/*
This has been generated by the overpass-turbo wizard.
The original search was:
“(cycleway=lane) or (cycleway=track) or (highway=cycleway) or (highway=footway and highway=path and (bicycle=yes or bicycle=designated or bicycle=official))”
*/
[out:json][timeout:60];
// Centeral + Tel Aviv districts
(rel[admin_level=4][name="מחוז המרכז"]; rel[admin_level=4][name="מחוז תל אביב"];); map_to_area->.a;
// Forests
(rel[name="יער בן-שמן"]; rel[name="יער שהם"]; rel[name="שמורת טבע הדום שומרון"]; rel[name="שמורת טבע נחל שילה"]; rel[name="יער מודיעין"]; way[name="יער מודיעין"]; rel[name="הגבעות המערביות"]; rel[name="נאות קדומים"]; way[name="יער המגינים"]; rel[name="יער חורשים"];); map_to_area->.forest;
(${queryPart('area.a')})->.good;
(${queryPart('area.forest')})->.bad;
(.good; - .bad;);
out skel;
>;
out skel qt;
`

const query = overpassTurboQuery

async function fetchOSMData() {
  const repsonse = await fetch('https://overpass-api.de/api/interpreter', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
    },
    body: query,
  })
  const osmJson = await repsonse.text()
  return osmJson
}

fetchOSMData()
  .then((data) => console.log(data))
  .catch((err) => {
    console.error(err)
    process.exit(1)
  })
